#pip install pyTelegramBotAPI
import telebot
import pandas as pd
import requests
from datetime import date
import os
import time
import contextlib
import hashlib

API_TOKEN = '5681868224:AAGvXXQYU0jbxL6lh53bPCfqbDDOZ4vlsVg'
bot = telebot.TeleBot(API_TOKEN)

@contextlib.contextmanager
def report_time(test):
    t0 = time.time()
    yield
    print("Time needed for `%s' called: %.2fs" % (test, time.time() - t0))


@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! üëã'
                                      '\n–Ø –±–æ—Ç –¥–ª—è —Ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤ md5 ü§ñ'
                                      '\n–Ø —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ '
                                      '–≤ –∏—Ö —Ö—ç—à–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Ä–µ–∫–ª–∞–º–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã.'
                                      '\n–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Ñ–∞–π–ª–µ –ø–æ —à–∞–±–ª–æ–Ω—É:')
    bot.send_document(chat_id=message.chat.id, document=open("default/–®–∞–±–ª–æ–Ω.xlsx", 'rb'))
    bot.send_message(message.chat.id, '–õ–∏–±–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ '
                                      '–∏ –≤ –æ—Ç–≤–µ—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –µ–≥–æ —Ö—ç—à.')


@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, '–î–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Ö—ç—à–∏ '
                                      '–≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ —à–∞–±–ª–æ–Ω—É:')
    bot.send_document(chat_id=message.chat.id, document=open("default/–®–∞–±–ª–æ–Ω.xlsx", 'rb'))
    bot.send_message(message.chat.id, '–õ–∏–±–æ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏ –≤ –æ—Ç–≤–µ—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –µ–≥–æ —Ö—ç—à.')


@bot.message_handler(content_types=['text'])
def echo_msg(message):
    phone = message.text
    phone_md5 = hashlib.md5(str(phone).encode()).hexdigest()
    bot.send_message(message.chat.id, "#Ô∏è‚É£ md5 —Ö—ç—à: {}".format(phone_md5))


@bot.message_handler(content_types=['document'])
def send_text(message):
    try:
        bot.send_message(message.chat.id, '‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–æ–º–µ—Ä–∞')
        file_id = message.document.file_name
        file_name = message.document.file_name
        file_id_info = bot.get_file(message.document.file_id)
        file = requests.get('https://api.telegram.org/file/bot{0}/{1}'.format(API_TOKEN, file_id_info.file_path))
        downloaded_file = bot.download_file(file_id_info.file_path)
        with open(file_name, 'wb') as new_file:
            new_file.write(downloaded_file)
        new_file.close()
        if file_name[-5:] == ".xlsx":
            phones = pd.read_excel(file_name)
            if phones.shape[1] == 1:
                phones.columns = ["phone"]
                phones['md5'] = [hashlib.md5(str(num).encode()).hexdigest() for num in phones['phone']]
                output_file_name = 'md5_hashes_{}.xlsx'.format(str(date.today()))
                phones['md5'].to_excel(output_file_name, index=False)
                bot.send_message(message.chat.id, '‚úÖ –ì–æ—Ç–æ–≤–æ! '
                                                  '\n–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–æ–º–µ—Ä–æ–≤: {}'.format(len(phones["phone"])))
                bot.send_document(chat_id=message.chat.id, document=open(output_file_name, 'rb'))
                os.remove(output_file_name)
                os.remove(file_name)
            else:
                bot.send_message(message.chat.id, '‚õîÔ∏è –û—à–∏–±–∫–∞!'
                                                  '\n–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞.'
                                                  '\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —à–∞–±–ª–æ–Ω–æ–º –Ω–∏–∂–µ:')
                bot.send_document(chat_id=message.chat.id, document=open("default/–®–∞–±–ª–æ–Ω.xlsx", 'rb'))
                os.remove(file_name)
        else:
            bot.send_message(message.chat.id, '‚õîÔ∏è –û—à–∏–±–∫–∞!'
                                              '\n–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞.'
                                              '\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —à–∞–±–ª–æ–Ω–æ–º –Ω–∏–∂–µ:')
            bot.send_document(chat_id=message.chat.id, document=open("default/–®–∞–±–ª–æ–Ω.xlsx", 'rb'))
            os.remove(file_name)
    except AttributeError:
        bot.send_message(message.chat.id, '‚õîÔ∏è –û—à–∏–±–∫–∞!'
                                          '\n–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞.'
                                          '\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —à–∞–±–ª–æ–Ω–æ–º –Ω–∏–∂–µ:')
        bot.send_document(chat_id=message.chat.id, document=open("default/–®–∞–±–ª–æ–Ω.xlsx", 'rb'))
    except Exception as e:
        bot.send_message(message.chat.id, '‚õîÔ∏è –û—à–∏–±–∫–∞!'
                                          '\n–ö–æ–¥ –æ—à–∏–±–∫–∏: {} '
                                          '\n‚ùóÔ∏è–°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π @amurylev'.format(e))


if __name__ == '__main__':
    try:
        bot.polling(none_stop=True)
    except Exception as err:
        print('‚õîÔ∏è–û—à–∏–±–∫–∞! –ö–æ–¥ –æ—à–∏–±–∫–∏: {} ‚õîÔ∏è'.format(err))
        bot.polling(none_stop=True)
